# To get started with security, check out the documentation:
# https://symfony.com/doc/current/security.html
security:

    # https://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
    encoders:
        #Symfony\Component\Security\Core\User\User: bcrypt
        Knarf\UserBundle\Entity\User: bcrypt

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        
    providers:
        database_users:
            entity:
                class:      KnarfUserBundle:User
                #property:   identifier
       

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
            
        oauth_authorize:
            pattern:    ^/oauth/v2/auth
            form_login:
                provider: database_users
                check_path: knarf_oauth_server_auth_login_check
                login_path: knarf_oauth_server_auth_login
            anonymous: false
            logout_on_user_change: true
            
        oauth_token:
            pattern:    ^/oauth/v2/token
            security:   false
        
        api:
            pattern: ^/api
            fos_oauth: true
            stateless: true
            anonymous: false

        api_doc:
            pattern: ^/api/documentation
            security:  false
            stateless: true
            anonymous: true  
        
        main:
            pattern: ^/
            anonymous: true
            # activate different ways to authenticate

            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate
            #http_basic: ~

            # https://symfony.com/doc/current/security/form_login_setup.html
            
            form_login:
              provider: database_users
              login_path: security_login_form
              check_path: security_login_check
              use_referer: false
              csrf_token_generator: security.csrf.token_manager
              failure_path: security_login_form
              success_handler: security_authentication_success_handler
              failure_handler: security_authentication_failure_handler
              
            remember_me:
                secret: '%secret%'
                lifetime: 604800
                    #   1 semaine
                path: /
                #always_remember_me: true
            logout:
                path: security_logout
                target: /
                handlers: [security_logout_success_handler]
                invalidate_session: true
                
            logout_on_user_change: true           
        
            
    access_decision_manager:
        #   affirmative (default) => This grants access as soon as there is one voter granting access;
        #   consensus => This grants access if there are more voters granting access than denying;
        #   unanimous => This only grants access once all voters grant access.
        strategy: affirmative

    access_control:
        - { path: ^/oauth/v2/, roles: [ IS_AUTHENTICATED_FULLY, IS_AUTHENTICATED_ANONYMOUSLY ] }
        - { path: ^/api, roles: [ IS_AUTHENTICATED_ANONYMOUSLY ] }        
        - { path: ^/api/documentation, roles: [ IS_AUTHENTICATED_FULLY, IS_AUTHENTICATED_ANONYMOUSLY ] }        
        - { path: ^/login | register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/rubrique/delete, roles: ROLE_ADMIN }
        - { path: ^/rubrique/edit, roles: ROLE_ADMIN }
        - { path: ^/rubriques/ajout, roles: ROLE_ADMIN } 
        - { path: ^/ajout, roles: ROLE_USER }
        - { path: ^/reply, roles: ROLE_USER }
        - { path: ^/logout, roles: ROLE_USER }
        